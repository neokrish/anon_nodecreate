<?php
// $Id$
/**
 * @file anon_nodecreate.module
 * TODO: Enter file description here.
 */

define("NEWUSER", "0");
define("EXISTINGUSER", "1");


/**
 * Implementation of hook_menu().
 */
function anon_nodecreate_menu() { 
  // This is the minimum information you can provide for a menu item.
  $items['admin/settings/anon_nodecreate'] = array(
    'title' => 'Anon Node Create Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('anon_nodecreate_settings'),
    'access arguments' => array('access content'), 
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}


/**
 * Implementation of hook_nodeapi().
 */
function anon_nodecreate_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  switch ($op) {
    case 'presave':
      global $user;
      $node->uid = $user->uid;
      neodsm($node);
      break;
    case 'validate':
      // check if we are processing an anon node form submission.
      global $user;
      if(!($user->uid)) {
        $new_user = $node->anon_nodecreate['new_user'];
        $existing_user = $node->anon_nodecreate['existing_user'];
          if ( !(empty($new_user['email']) && empty($new_user['username']) && empty($new_user['password']) ) ) {
            $new_user = array(
              'name' => $new_user['username'],
              'pass' => $new_user['password'], // note: do not md5 the password
              'mail' => $new_user['email'],
              'status' => 1,
              'init' => $new_user['email']
            ); 
//            TODO: Check existance of username and email in db before creating new user account.
/*            $user_exists_byname = user_load(array(
              'name' => $new_user['username']
            ));
            $user_exists_byemail = user_load(array(
              'mail' => $new_user['email']
            ));
            neodsm($user_exists_byname);
            if ($user_exists_byname->uid != 0) {
                  form_set_error('anon_nodecreate][new_user][username', t('Username already in use. Please enter a different username.'));            
            } else if ($user_exists_byemail->uid != 0) {
                  form_set_error('anon_nodecreate][new_user][email', t('A user already exists using the entered email. If you are already have an account, please fill in Existing User details, instead of New User.'));
            } else { 
*/
                $user = user_save(NULL, $new_user);
                $account = user_authenticate($new_user);
                if(!$account) {
                  form_set_error('anon_nodecreate][new_user', t('Cannot create an account with the provided details. Please re-enter.'));  
                } 
//            }
          } else if ( !(empty($existing_user['username']) && empty($existing_user['password'])) ) {
            $existing_user = array(
              'name' => $existing_user['username'],
              'pass' => $existing_user['password'],
            );
            $account = user_authenticate($existing_user);
            if(!$account) {
              form_set_error('anon_nodecreate][existing_user', t('Incorrect login details. If you do not have an account, please type in new user info, before submitting the content.'));  
            }
          } else {	
              form_set_error('anon_nodecreate', t('You must either provide new user details or provide existing user login.'));
          }
      }
      break;
  }
}


/**
 * Implementation of hook_form_alter().
 */
function anon_nodecreate_form_alter(&$form, &$form_state, $form_id) {
  global $user;

  if (((substr($form_id, -10)=='_node_form') && (!$user->uid))) {
    $form['anon_nodecreate'] = array(
      '#type' => 'fieldset',
      '#title' => t('User account details'),
      '#description' => t('You have either not logged in or do not have an account in this site. Please fill the relevant detail below to automatically associate your account to this content.'),
      '#collapsible' => TRUE,
      '#tree' => TRUE,
    );
    $form['anon_nodecreate']['new_user'] = array(
      '#type' => 'fieldset',
      '#title' => t('New User'),
      '#description' => t('If you are a new user, please type in your email and preferred username. You will receive your account information on email.'),
    );
    $form['anon_nodecreate'] ['new_user'] ['form_fields'] = anon_nodecreate_get_user_form('user_register');

/*
    $form['anon_nodecreate'] ['new_user'] ['email'] = array(
      '#type' => 'textfield',
      '#title' => 'Email',
    );
    $form['anon_nodecreate'] ['new_user'] ['username'] = array(
      '#type' => 'textfield',
      '#title' => 'User Name',
    );
    $form['anon_nodecreate'] ['new_user'] ['password'] = array(
      '#type' => 'password_confirm',
    ); */
    $form['anon_nodecreate']['existing_user'] = array(
      '#type' => 'fieldset',
      '#title' => t('Existing User'),
      '#description' => t('If you already have an account, please type in your login details '),
    );
    $form['anon_nodecreate'] ['existing_user'] ['form_fields'] = anon_nodecreate_get_user_form('user_login'); 
/*    $form['anon_nodecreate'] ['existing_user'] ['username'] = array(
      '#type' => 'textfield',
      '#title' => 'Username',
    );
    $form['anon_nodecreate'] ['existing_user'] ['password'] = array(
      '#type' => 'password',
      '#title' => 'Password',
    );      */
  }
}

function anon_nodecreate_get_user_form($form_id) {
  switch ($form_id) {
    case 'user_register':
      $form = drupal_retrieve_form('user_register', $form_state); 
      unset($form['submit']);
      return $form;
    break;
    case 'user_login':
      $form = drupal_retrieve_form('user_login', $form_state);
      unset($form['submit']); 
      return $form;    
    break;
  }
}
function anon_nodecreate_settings() {
  $form['anon_nodecreate'] ['option_set1'] = array(
    '#type' => 'fieldset',
    '#title' => 'User Registration Option',
  );
  $form['anon_nodecreate'] ['option_set1']['anon_create_register'] = array(
    '#type' => 'radios',
    '#title' => 'Registration fields',
    '#options' => array('0' => 'Use default registration fields',
       '1' => 'Provide only email field for registration',
       '2' => 'Provide email and username field for registration'
    ),
    '#default_value' => variable_get('anon_create_register', NULL),
    '#description' => 'Select the fields to be present while node is created anonymously',
  );

 return system_settings_form($form);
}

function neodsm($variable) {
  $debug = '<pre>' . print_r($variable, true) . '</pre>'; 
  drupal_set_message($debug);
}

